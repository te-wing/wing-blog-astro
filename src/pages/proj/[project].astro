---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import BlogPostCard from '../../components/BlogPostCard.astro'; // 以前作成したコンポーネント
import styles from './projPage.module.scss'; // 後ほど作成するスタイルシート

// 動的なパス (getStaticPaths) を生成
export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const uniqueProjects = new Set<string>();

  // 全ての記事からユニークなタグを抽出
  allPosts.forEach(post => {
    post.data.projects?.forEach(project => uniqueProjects.add(project));
  });

  // 各タグに対してパスと props を生成
  return Array.from(uniqueProjects).map(project => {
    // そのタグに紐づく記事をフィルタリング
    const filteredPosts = allPosts.filter(post => post.data.projects?.includes(project));
    // 日付で降順にソート（新しい投稿が先に来るように）
    filteredPosts.sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime());

    return {
      params: { project: project }, // URLのパスとして使用されるタグ名
      props: { posts: filteredPosts, projectName: project }, // ページに渡すデータ
    };
  });
}

// props を受け取る
const { posts, projectName } = Astro.props;
---

<Layout title={`${projectName} の記事一覧`}>
  <head>
    <title>「{projectName}」プロジェクト | Diaries by Wing</title>
    <meta name="description" content="${tagName}プロジェクトのブログ記事を検索できます．" />
  </head>
  <article class={styles.tagPage}>
    <a class={styles.back} href='/proj'>
      <svg xmlns="http://www.w3.org/2000/svg" height="15px" viewBox="0 -960 960 960" width="15px" fill="currentColor"><path d="M400-80 0-480l400-400 71 71-329 329 329 329-71 71Z"/></svg>
      プロジェクト一覧へ戻る
    </a>
    <br />

    <h2 class={styles.h2}>プロジェクト：{projectName}</h2>
    {posts.length === 0 ? (
      <p>このプロジェクトの記事が見つかりませんでした．</p>
    ) : (
      <div class={styles.postsGrid}>
        {posts.map(post => (
          <BlogPostCard post={post} />
        ))}
      </div>
    )}
  </article>
</Layout>